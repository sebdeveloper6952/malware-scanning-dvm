package services

import (
	"crypto/sha256"
	"encoding/hex"
	"io"
	"os"

	"golang.org/x/mod/sumdb/dirhash"
)

type hasher struct{}

func NewHasherService() Hasher {
	return &hasher{}
}

func (d *hasher) Hash(path string) (string, error) {
	fileInfo, err := os.Lstat(path)
	if err != nil {
		return "", err
	}

	if fileInfo.IsDir() {
		return dirhash.HashDir(path, "nostr", dirhash.DefaultHash)
	}

	f, err := os.Open(path)
	if err != nil {
		return "", err
	}
	defer f.Close()

	h := sha256.New()
	if _, err := io.Copy(h, f); err != nil {
		return "", err
	}
	digest := h.Sum(nil)

	return hex.EncodeToString(digest), nil
}
